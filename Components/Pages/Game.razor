@layout Components.Layout.MallLayout
@page "/game"
@rendermode InteractiveServer

@using System

<div dir="rtl" class="text-center">
    <h1 class="mb-4"> משחק איקס עיגול!</h1>

    <table class="game-board">
        @for (int i = 0; i < 3; i++)
        {
            <tr>
                @for (int j = 0; j < 3; j++)
                {
                    var row = i;
                    var col = j;
                    <td @onclick="() => MakeMove(row, col)">
                        @(board[row, col] ?? "")
                    </td>
                }
            </tr>
        }
    </table>

    <p class="fw-bold fs-5">@status</p>

    <div class="mt-3">
        <button class="btn btn-secondary" @onclick="ResetGame">התחל משחק חדש</button>
    </div>
</div>

<style>
    .game-board {
        border-collapse: collapse;
        margin: 1rem auto;
    }

        .game-board td {
            width: 100px;
            height: 100px;
            text-align: center;
            vertical-align: middle;
            font-size: 2.5rem;
            font-weight: bold;
            color: black;
            border: 2px solid #333;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .game-board td:hover {
                background-color: #f0f0f0;
            }
</style>

@code {
    private string[,] board = new string[3, 3];
    private string currentPlayer = "X";
    private string status = "התור של שחקן איקס";
    private bool gameOver = false;

    private void MakeMove(int row, int col)
    {
        if (row < 0 || row >= 3 || col < 0 || col >= 3)
            return;

        if (gameOver || !string.IsNullOrEmpty(board[row, col]))
            return;

        board[row, col] = currentPlayer;

        if (CheckWin(currentPlayer))
        {
            status = $"שחקן {currentPlayer} ניצח!";
            gameOver = true;
        }
        else if (IsDraw())
        {
            status = "תיקו!";
            gameOver = true;
        }
        else
        {
            currentPlayer = currentPlayer == "X" ? "O" : "X";
            status = $"התור של שחקן {currentPlayer}";
        }
    }

    private bool CheckWin(string player)
    {
        for (int i = 0; i < 3; i++)
        {
            if ((board[i, 0] == player && board[i, 1] == player && board[i, 2] == player) ||
                (board[0, i] == player && board[1, i] == player && board[2, i] == player))
                return true;
        }

        return (board[0, 0] == player && board[1, 1] == player && board[2, 2] == player) ||
               (board[0, 2] == player && board[1, 1] == player && board[2, 0] == player);
    }

    private bool IsDraw()
    {
        foreach (var cell in board)
        {
            if (string.IsNullOrEmpty(cell))
                return false;
        }
        return true;
    }

    private void ResetGame()
    {
        board = new string[3, 3];
        currentPlayer = "X";
        status = "התור של שחקן איקס";
        gameOver = false;
    }
}
